/*********************************************************************************************************
**
**                                    中国软件开源组织
**
**                                   嵌入式实时操作系统
**
**                                       SylixOS(TM)
**
**                               Copyright  All Rights Reserved
**
**--------------文件信息--------------------------------------------------------------------------------
**
** 文   件   名: vmm_cfg.h
**
** 创   建   人: Han.Hui (韩辉)
**
** 文件创建日期: 2008 年 12 月 09 日
**
** 描        述: 这是系统 Virtual Memory Manager 基本配置文件。
                 软件内部使用 3 级页表, 分别是 PGD (页目录) PMD (中间页目录) PTE (页表)
*********************************************************************************************************/

#ifndef __VMM_CFG_H
#define __VMM_CFG_H

/*********************************************************************************************************
*                                        虚拟内存管理 (需要硬件 MMU 支持)
*
* 依存关系: 1: 互斥信号量
*********************************************************************************************************/

#define LW_CFG_VMM_EN                         1                         /*  是否需要对虚拟内存的支持    */
#define LW_CFG_VMM_MAX_ORDER                  11                        /*  根据性能与连续分页情况决定  */
                                                                        /*  非特殊情况, 不需要改动      */
/*********************************************************************************************************
*                                        虚拟内存页表相关配置
*********************************************************************************************************/

#define LW_CFG_VMM_PAGE_SHIFT                 12                        /*  2^12 = 4096                 */
#define LW_CFG_VMM_PAGE_SIZE                  (1ul << LW_CFG_VMM_PAGE_SHIFT)
#define LW_CFG_VMM_PAGE_MASK                  (~(LW_CFG_VMM_PAGE_SIZE - 1))

#define LW_CFG_VMM_PMD_SHIFT                  20                        /*  NO PMD same as PGD          */
#define LW_CFG_VMM_PMD_SIZE                   (1ul << LW_CFG_VMM_PMD_SHIFT)
#define LW_CFG_VMM_PMD_MASK                   (~(LW_CFG_VMM_PMD_SIZE - 1))

#define LW_CFG_VMM_PGD_SHIFT                  20                        /*  2^20 = 1MB                  */
#define LW_CFG_VMM_PGD_SIZE                   (1ul << LW_CFG_VMM_PGD_SHIFT)
#define LW_CFG_VMM_PGD_MASK                   (~(LW_CFG_VMM_PGD_SIZE - 1))

/*********************************************************************************************************
*                                        转换条目相关, 每一层所包含的表项个数
*********************************************************************************************************/

#define LW_CFG_VMM_PTRS_PER_PGD               256                       /*  PGD 拥有的转换条目数        */
#define LW_CFG_VMM_PTRS_PER_PMD               1                         /*  PMD 拥有的转换条目数        */
#define LW_CFG_VMM_PTRS_PER_PTE               1024                      /*  PTE 拥有的转换条目数        */

/*********************************************************************************************************
*                                        物理页面区域设置
*********************************************************************************************************/

#define LW_CFG_VMM_ZONE_NUM                   2                         /*  物理分区数                  */

/*********************************************************************************************************
*                                        虚拟页面区域设置
*
*  注意: 以下地址区域不能与操作系统和bsp运行的物理地址区间有任何重合.
         同时, 大小最好比所有 zone 空间之和要大, 因为 vmmMalloc 的碎片链接需要占用连续逻辑空间.
         这里默认开辟 1GB 空间, 
         LW_CFG_VMM_VIRTUAL_START 之上的一个虚拟页面保留作为告诉数据切换通道
*********************************************************************************************************/

#define LW_CFG_VMM_VIRTUAL_SWITCH             0xC0000000                /*  高速数据切换通道一个虚拟页面*/
#define LW_CFG_VMM_VIRTUAL_START              (LW_CFG_VMM_VIRTUAL_SWITCH + LW_CFG_VMM_PAGE_SIZE)
                                                                        /*  start addr : 3GB + 1page    */
#define LW_CFG_VMM_VIRTUAL_SIZE               0x3FFF0000                /*  size       : 1GB - 16page   */

#endif                                                                  /*  __VMM_CFG_H                 */
/*********************************************************************************************************
  END
*********************************************************************************************************/
